#!/bin/bash

DEFAULT_SHOTTY_URL="http://localhost:4000/"
DEFAULT_SHOTTY_PATH="$HOME/shotty"

url="${SHOTTY_URL:-$DEFAULT_SHOTTY_URL}"
target="${SHOTTY_PATH:-$DEFAULT_SHOTTY_PATH}"

usage() {
	cat 1>&2 << EOM
Usage: $0 <path> [count]

     - path: 	A configured Shotty destination on the target.
     - count: 	Pick the Nth most recent image (default: "1", the latest).
		This can also be a range in the format "n..m".

Other behaviour is configured by environment variables:

 - SHOTTY_URL:	URL to the shotty server.
		  Default:	${DEFAULT_SHOTTY_URL}
		  Currently:	${url}
 - SHOTTY_PATH:	Path to store files.
		  Default:	${DEFAULT_SHOTTY_PATH}
		  Currently:	${target}
EOM
	exit 1
}

open="open"
open_arg=""
count=1
err=0
expecting="path"

while test $# -gt 0; do
	case "$1" in
		-q)
			open="quicklook"
			open_arg=""
			;;

		-p)
			photoshop="`/bin/ls -d '/Applications/Adobe Photoshop '*/*.app | sort | tail -1`"
			open="open"
		        open_arg="-a$photoshop"
			;;

		-a)
			open="open"
		        open_arg="-a$2"
			shift
			;;

		-a*)
			open="open"
		        open_arg="$1"
			;;

		[a-z]*)
			if [ "$expecting" = "path" ]; then
				path="$1"
				expecting="count"
			else
				usage
			fi
			;;

		[0-9]*)
			if [ "$expecting" = "count" ]; then
				count="$1"
				expecting="done"
			else
				usage
			fi
			;;

		*)
			echo "Unknown argument: $1"
			err=1
			;;
	esac
	shift
done

if [ "$err" -gt 0 ]; then
	exit 1
elif [ "$path" = "" ]; then
	usage
fi

set -e

tmpdir="`mktemp -d -p "$target"`"
cd "$tmpdir"

zip="shotty.zip"
head="headers.txt"
curl -sS -o "$zip" -D "$head" "${url}${path}/${count}"

if grep -iq "content-type: application/zip" "$head"; then
	TZ=UTC unzip -j "$zip"
	rm "$zip" "$head"

	ln -f * "$target"

	cd "$target"
	(cd "$tmpdir"; find . -type f -print0; rm -r "$tmpdir") | \
		if [ "$open_arg" != "" ]; then
			exec xargs -t0 "$open" "$open_arg"
		else
			exec xargs -t0 "$open"
		fi
else
	# Takes advantage of the fact that grep usually won't 
	# just throw binary junk onto the console.
	grep . "$zip"
	rm -r "$tmpdir"
	exit 1
fi

